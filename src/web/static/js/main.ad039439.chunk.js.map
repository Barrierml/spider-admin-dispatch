{"version":3,"sources":["component/header.jsx","component/card.jsx","store/store.jsx","ws/ws.js","component/dialog.jsx","component/loading.jsx","component/setting.jsx","component/logger.jsx","component/splierLi.jsx","component/splier.jsx","App.js","reportWebVitals.js","index.js"],"names":["header","className","Card","props","title","children","loadLog","name","list","type","update_list","data","store","dispatch","changeStatus","ss","status","createStore","combineReducers","allSpiders","state","action","newlist","clone","s","find","Object","assign","logger","reverse","_","splice","msg","window","queue","promise_id","wsGet","parma","Promise","resolve","rejcet","ws","send","JSON","stringify","id","push","wsSetSpider","setting","a","parse","console","log","res","index","findIndex","e","backDispatch","setDispatch","onclose","params","init","WebSocket","onmessage","Dd","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","onClick","onClose","onConfrim","tabindex","okText","closeText","loading","cron","scheduler","connect","rate","useState","setCron","cpu","setCpu","setSpider","Grid","style","minWidth","padding","container","spacing","item","xs","TextField","value","onChange","target","label","variant","placeholder","width","fullWidth","Msg","color","level","time","moment","format","length","map","maxHeight","logList","lastInfor","clearLog","last_run","next_run","setShow","load","setLoad","showLog","setLog","disabled","openSpider","stopSpider","List","this","react","Component","storeUpdateList","forEach","wsInit","onopen","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad039439.chunk.js","sourcesContent":["\r\nexport default function header() {\r\n    return (<header className=\"h-20 border-b-2 px-20 flex items-center shadow\">\r\n        <div className=\"text-blue-600 text-2xl font-semibold select-none\">爬虫管理</div>\r\n        <div className=\"flex flex-row mx-20 space-x-10  text-gray-500 text-lg\">\r\n            <div className=\"cursor-pointer hover:text-black px-4 py-1 transition border-b-2 border-blue-600\">爬虫</div>\r\n            <div className=\"cursor-pointer hover:text-black px-4 py-1 transition border-b-2 hover:border-blue-600\">配置</div>\r\n            <div className=\"cursor-pointer hover:text-black px-4 py-1 transition border-b-2 hover:border-blue-600\">关于</div>\r\n        </div>\r\n    </header>)\r\n}","import { find } from \"lodash\"\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className=\"block bg-white rounded shadow\">\r\n            <div className=\"h-12 px-5 flex flex-row items-center justify-between\">\r\n                <h2 className=\"text-2xl font-medium\">{props.title}</h2>\r\n            </div>\r\n            <div className=\"p-3\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { createStore, combineReducers } from 'redux'\r\nimport _, { clone, find, reverse } from \"lodash\"\r\n\r\nfunction allSpiders(state = { list: [] }, action) {\r\n    switch (action.type) {\r\n        case 'list_update':\r\n            return { list: action.list };\r\n        case \"change_list\":\r\n            const newlist = clone(state.list);\r\n            let s = find(newlist, { name: action.name });\r\n            if (s) {\r\n                Object.assign(s, action.data);\r\n            }\r\n            return { list: newlist };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function loadLog(name, list) {\r\n    return {\r\n        type: \"log_load\",\r\n        name,\r\n        list,\r\n    }\r\n}\r\nexport function addLog(name, msg) {\r\n    return {\r\n        type: \"log_add\",\r\n        name,\r\n        msg,\r\n    }\r\n}\r\n\r\nexport function update_list(name, data) {\r\n    store.dispatch({\r\n        type: \"change_list\",\r\n        name,\r\n        data,\r\n    });\r\n}\r\n\r\n\r\nexport function changeStatus(name, ss) {\r\n    store.dispatch({\r\n        type: \"status_change\",\r\n        name,\r\n        status: ss,\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nfunction status(state = {}, action) {\r\n    switch (action.type) {\r\n        case \"status_change\":\r\n            return {\r\n                ...state,\r\n                [\"status_\" + action.name]: action.status,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nfunction logger(state = {}, action) {\r\n    switch (action.type) {\r\n        case \"log_load\":\r\n            return {\r\n                ...state,\r\n                [\"log_\" + action.name]: reverse(action.list),\r\n            }\r\n        case \"log_add\":\r\n            let list = _.clone(state[\"log_\" + action.name]) || [];\r\n            list.splice(0, 0, action.msg);\r\n            return {\r\n                ...state,\r\n                [\"log_\" + action.name]: list,\r\n            }\r\n        case \"log_clear\":\r\n            return {\r\n                ...state,\r\n                [\"log_\" + action.name]: [],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst store = createStore(combineReducers({ allSpiders, logger, status }));\r\nexport default store;","import store, { addLog, changeStatus, update_list } from \"../store/store\"\r\nimport _ from \"lodash\"\r\nwindow.store = store;\r\n\r\n\r\n//保存回调list\r\nconst queue = [];\r\n//异步等待事件的id\r\nlet promise_id = 0;\r\n\r\nfunction send(msg) {\r\n  window.ws.send(JSON.stringify(msg));\r\n}\r\n\r\nexport function wsGet(msg, parma) {\r\n  return new Promise((resolve, rejcet) => {\r\n    send({\r\n      type: \"get\",\r\n      id: promise_id,\r\n      msg,\r\n      parma\r\n    })\r\n    queue.push({\r\n      id: promise_id++,\r\n      resolve,\r\n      rejcet,\r\n    })\r\n  })\r\n}\r\n\r\nwindow.wsGet = wsGet;\r\n\r\n\r\nexport async function wsSetSpider(name, setting) {\r\n  return await wsGet(\"set_spider\", { name, parma: setting });\r\n}\r\n\r\n\r\n\r\n//系统消息回执\r\nfunction systemDispatch() {\r\n\r\n}\r\n\r\n//系统消息回执\r\nfunction setDispatch(res) {\r\n  const { type } = res;\r\n  switch (type) {\r\n    case \"add_log\":\r\n      return store.dispatch(addLog(res.name, { ...res.data }));\r\n    case \"spider_close\":\r\n      return changeStatus(res.name, false);\r\n    case \"spider_open\":\r\n      update_list(res.name, { ...res.data })\r\n      return changeStatus(res.name, true);\r\n    case \"update_spider\":\r\n      return update_list(res.name, { ...res.data })\r\n    default:\r\n      return\r\n  }\r\n}\r\n\r\n//返回值\r\nfunction backDispatch(id, res) {\r\n  let index = _.findIndex(queue, (e) => { return e.id === id });\r\n  if (index > -1) {\r\n    const obj = queue.splice(index, 1)[0];\r\n    obj.resolve(res);\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction dispatch(data) {\r\n  data = JSON.parse(data.data);\r\n  console.log(\"收到消息\", data);\r\n  const { type, res, id } = data;\r\n  if (type === \"system\") {\r\n    systemDispatch(res);\r\n  }\r\n  else if (type === \"return\") {\r\n    backDispatch(id, res);\r\n  }\r\n  else if (type === \"set\") {\r\n    setDispatch(res);\r\n  }\r\n}\r\n\r\n\r\nfunction onclose(params) {\r\n  console.log(\"服务器已断开\");\r\n}\r\n\r\nfunction init() {\r\n  const ws = window.ws = new WebSocket(\"ws://localhost:4000/spider\");\r\n  ws.onmessage = dispatch;\r\n  ws.onclose = onclose;\r\n  return ws;\r\n}\r\n\r\nexport default init;","import { Transition } from \"@headlessui/react\";\r\nexport default function Dd(props) {\r\n    let show = typeof props.show === \"boolean\" ? props.show : false;\r\n    return (\r\n        <Transition\r\n            show={show}\r\n            enter=\"transition-opacity duration-200\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"transition-opacity duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n        >\r\n            <div className={\" z-20 fixed inset-0 h-screen w-screen flex justify-center items-center\"}>\r\n                <div onClick={() => { props.onClose && props.onClose() }} className=\" absolute inset-0 bg-black opacity-30 z-10\"></div>\r\n                <div className=\" z-20 w-screen top-1/4 flex justify-center\">\r\n                    <div className=\"inline-block py-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-lg\">\r\n                        <h3 className=\"text-lg px-6 font-medium leading-6 text-gray-900\" id=\"headlessui-dialog-title-3\">{props.title}</h3>\r\n                        <div className=\"mt-2\">\r\n                            {props.children}\r\n                        </div>\r\n                        <div className=\"px-6 justify-end mt-6 space-x-4 flex\">\r\n                            {props.onConfrim && <button onClick={props.onConfrim} type=\"button\" className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\" tabindex=\"0\">{props.okText || '确定'}</button>}\r\n                            {props.onClose && <button onClick={props.onClose} type=\"button\" className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-red-900 bg-red-100 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-red-500\" tabindex=\"0\">{props.closeText || '取消'}</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Transition>\r\n    );\r\n}","import { Transition } from \"@headlessui/react\";\r\n\r\nexport default function loading(props) {\r\n    let show = props.show;\r\n    return (\r\n        <Transition\r\n            show={show}\r\n            enter=\"transition-opacity duration-200\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"transition-opacity duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n        >\r\n            <div className=\"absolute flex items-center flex-col justify-center z-10 top-0 left-0 right-0 bottom-0 bg-gray-200\">\r\n                <div className=\"border-black rounded-full w-8 h-8 border-t-2 animate-spin\">\r\n                </div>\r\n                <div>\r\n                    {props.msg}\r\n                </div>\r\n            </div>\r\n        </Transition>\r\n    )\r\n}","import { connect } from \"react-redux\";\r\nimport { Grid, TextField } from \"@material-ui/core\"\r\nimport { find } from \"lodash\";\r\nimport Dialog from \"./dialog\"\r\nimport { wsSetSpider } from \"../ws/ws\";\r\nimport store from \"../store/store\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\n\r\nasync function setSpider(name, cron) {\r\n    let res = await wsSetSpider(name, { scheduler: cron })\r\n    if (res) {\r\n        store.dispatch({\r\n            type: \"\"\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction Setting(props) {\r\n\r\n    let [cron, setCron] = useState(props.rate);\r\n    let [cpu, setCpu] = useState(props.cpu);\r\n\r\n    return (\r\n        <Dialog {...props} okText=\"保存\" onConfrim={() => { setSpider(props.name, cron); props?.onClose() }}>\r\n            <Grid style={{ minWidth: \"30vw\", padding: \"10px 20px\" }} container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        type=\"text\"\r\n                        value={cron}\r\n                        onChange={(e) => setCron(e.target.value)}\r\n                        label=\"cron设置\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"* * * * * *\"\r\n                        style={{ width: \"100%\" }} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        type=\"text\"\r\n                        label=\"cpu限制\"\r\n                        placeholder=\"99\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        value={cpu}\r\n                        onChange={(e) => setCpu(e.target.value)}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\nfunction stateToProps(state, props) {\r\n    let ww = find(state.allSpiders.list, { name: props.name });\r\n    return {\r\n        rate: ww.rate,\r\n    }\r\n}\r\n\r\nexport default connect(stateToProps)(Setting)","import { reverse } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nexport function Msg(props) {\r\n    let color = \"green\"\r\n    switch (props.data.level) {\r\n        case \"error\":\r\n            color = \"red\"\r\n            break;\r\n        case \"warn\":\r\n            color = \"yellow\"\r\n            break;\r\n        case \"mark\":\r\n            color = \"gray\"\r\n            break;\r\n        case \"debug\":\r\n            color = \"blue\"\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    let time = moment(props.data.time).format(\"YYYY-MM-DD HH:mm:ss\")\r\n    return <li className={`p-1 rounded whitespace-pre-wrap transition border text-lg font-medium leading-normal hover:text-white my-1 hover:bg-${color}-400 text-${color}-400 border-${color}-400`} >\r\n        {`[${time}][${props.data.level}]-${props.data.data}`}\r\n    </li>\r\n}\r\n\r\nfunction Logger(props) {\r\n    let res;\r\n    if (props.list && props.list.length > 0) {\r\n        res = reverse(props.list).map((e) =>\r\n            <Msg key={e.time} data={e}></Msg>\r\n        )\r\n    }\r\n    else {\r\n        res = <div className={\"w-full h-40 flex justify-center items-center text-xl\"}>当前无日志</div>\r\n    }\r\n    return (<ul className={\"w-screen max-w-3xl overflow-y-auto px-5\"} style={{ maxHeight: \"40vh\" }}>\r\n        {res}\r\n    </ul>)\r\n}\r\n\r\n\r\nfunction stateToProps(state, props) {\r\n    return {\r\n        list: state.logger[\"log_\" + props.name],\r\n    }\r\n}\r\n\r\nexport default connect(stateToProps)(Logger)","import { useState } from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { wsGet } from \"../ws/ws\";\r\nimport Dialog from \"./dialog\"\r\nimport Load from \"./loading\"\r\nimport Setting from \"./setting\";\r\nimport Logger from \"./logger\"\r\nimport moment from \"moment\";\r\nfunction Li(props) {\r\n    let { status, title, last_run, next_run } = props;\r\n    let [show, setShow] = useState(false);\r\n    let [load, setLoad] = useState(false);\r\n    let [showLog, setLog] = useState(false);\r\n\r\n    async function openSpider() {\r\n        await wsGet(\"open_spider\", title);\r\n        setLoad(false);\r\n    }\r\n\r\n    async function stopSpider() {\r\n        await wsGet(\"stop_spider\", title);\r\n        setLoad(false);\r\n    }\r\n\r\n\r\n    last_run = last_run && moment(last_run).format(\"YYYY-MM-DD HH:mm:ss\")\r\n    next_run = next_run && moment(next_run).format(\"YYYY-MM-DD HH:mm:ss\")\r\n\r\n    return (<div className=\" relative hover:bg-light-blue-500 transition  hover:border-transparent hover:shadow-lg group block rounded-lg p-4 border border-gray-200\">\r\n        <Load show={load}></Load>\r\n        <dl className=\"sm:block xl:block  items-center\">\r\n            <div className=\" relative lg:mb-0 xl:mb-4\">\r\n\r\n                <dd className=\"group-hover:text-white leading-6 font-medium text-lg text-black\">{title}</dd>\r\n                <div className=\"absolute sm:right-0 sm:top-0 lg:right-6 lg:top-5 xl:right-0 xl:top-0\">\r\n                    <div className={\"bg-yellow-500 rounded p-1 m-1 text-white text-sm\"}>最后运行：{last_run || \"无\"}</div>\r\n                    <div className={\"bg-blue-500 rounded p-1  m-1 text-white text-sm\"}>下次运行：{next_run || \"无\"}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center lg:mb-0 xl:mb-4 space-x-2\">\r\n                <dd className={`rounded-full shadow ${status === \"运行中\" ? 'bg-green-400' : 'bg-red-500'} h-5 w-5`}></dd>\r\n                <dd className=\"group-hover:text-light-blue-200  text-base text-gray-700  font-medium\">{status}</dd>\r\n            </div>\r\n            <div className=\"mt-2 col-start-2 row-start-1 row-end-3 flex space-x-2 flex-row\">\r\n                <button disabled={status === \"运行中\" ? true : false} onClick={() => { setLoad(true); openSpider() }} className=\"hover:bg-light-blue-200 hover:text-light-blue-800 group flex items-center rounded-md bg-light-blue-100 text-light-blue-600 text-sm font-medium px-4 py-2\">运行</button>\r\n                <button disabled={status === \"运行中\" ? false : true} onClick={() => { setLoad(true); stopSpider() }} className=\"hover:bg-red-200 hover:text-red-800 group flex items-center rounded-md bg-red-100 text-red-600 text-sm font-medium px-4 py-2\">停止</button>\r\n                <button onClick={() => { setShow(true) }} className=\"hover:bg-green-200 hover:text-green-800 group flex items-center rounded-md bg-green-100 text-green-600 text-sm font-medium px-4 py-2\">配置</button>\r\n            </div>\r\n            <div className=\"mt-2 col-start-3 row-span-2 flex items-center justify-between\">\r\n                <span className=\" flex-shrink truncate text-gray-600 group-hover:text-white\">\r\n                    {props.lastInfor?.data}\r\n                </span>\r\n                <button onClick={() => { setLog(true) }} className=\"ml-2 flex-shrink-0 text-sm font-medium transition-colors duration-200 ring-2 p-1 ring-current outline-none rounded-md text-violet-600 group-hover:text-gray-100\">查看全部日志</button>\r\n            </div>\r\n        </dl>\r\n        <Dialog\r\n            closeText=\"关闭日志\"\r\n            okText={\"清除日志\"}\r\n            onConfrim={props.clearLog}\r\n            title={title + \"的日志\"}\r\n            show={showLog}\r\n            onClose={() => { setLog(false) }}>\r\n            <Logger name={title}></Logger>\r\n        </Dialog>\r\n        <Setting name={title} title={title + \" 修改配置\"} show={show} onClose={() => { setShow(false) }}></Setting>\r\n    </div>)\r\n}\r\n\r\nfunction stateToProps(state, props) {\r\n    //最后的日志展示\r\n    let logList = state.logger[\"log_\" + props.title];\r\n    let status = state.status[\"status_\" + props.title];\r\n    let lastInfor = \"\";\r\n    if (logList && logList.length > 0) {\r\n        lastInfor = logList[0];\r\n    }\r\n    status = status ? \"运行中\" : \"已停止\";\r\n    //运行状态的改变\r\n    return { lastInfor, status }\r\n}\r\n\r\nfunction dispatchToProps(dispatch, props) {\r\n    return {\r\n        clearLog: () => dispatch({ type: \"log_clear\", name: props.title })\r\n    }\r\n}\r\n\r\n\r\nexport default connect(stateToProps, dispatchToProps)(Li)","import Li from \"./splierLi\"\r\nimport react from \"react\"\r\nimport { connect } from \"react-redux\"\r\nclass List extends react.Component {\r\n    render() {\r\n        let _render = null;\r\n        if (this.props?.list && this.props?.list.length > 0) {\r\n            _render =\r\n                <ul className=\"grid grid-cols-1 sm:grid-cols-1 xl:grid-cols-2 gap-4\">\r\n                    {this.props.list.map((e) =>\r\n                        <li><Li key={e.name} title={e.name} {...e} ></Li></li>\r\n                    )}\r\n                </ul>\r\n        }\r\n        else {\r\n            _render = <div className={\"w-full h-40 flex justify-center items-center text-xl\"}>指定目录下无爬虫文件</div>;\r\n        }\r\n        return (_render)\r\n    }\r\n}\r\n\r\n\r\nconst stateToProps = (state) => {\r\n    return {\r\n        list: state.allSpiders.list,\r\n    }\r\n}\r\n\r\nexport default connect(stateToProps)(List)","import Header from \"./component/header\"\nimport Card from \"./component/card\"\nimport SplierList from \"./component/splier\"\nimport react from \"react\"\nimport { Provider } from \"react-redux\"\nimport store, { loadLog } from './store/store'\nimport wsInit, { wsGet } from \"./ws/ws.js\"\n\nlet ws = wsInit();\n\nfunction storeUpdateList(list) {\n  if (list?.length && list.length > 0) {\n    return {\n      type: \"list_update\",\n      list,\n    }\n  }\n}\n\nasync function init() {\n  //初始化列表数据\n  let list = await wsGet(\"list\")\n  //初始化日志\n  list?.forEach(async e => {\n    let log = await wsGet(\"log\", e.name);\n    store.dispatch(loadLog(e.name, log))\n  });\n  store.dispatch(storeUpdateList(list));\n}\n\nws.onopen = init;\n\nexport default class App extends react.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"h-screen w-screen flex flex-col\">\n          <Header></Header>\n          <div className=\"py-3 px-5 flex flex-col h-full bg-gray-100 border-gray-200\">\n            <Card title=\"爬虫池\">\n              <SplierList></SplierList>\n            </Card>\n          </div>\n        </div>\n      </Provider>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}